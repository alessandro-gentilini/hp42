# -*- Mode:Org; Coding:utf-8; fill-column:158 -*-
#+TITLE:       free42 Custom Menus
#+AUTHOR:      Mitch Richling
#+EMAIL:       http://www.mitchr.me/
#+DATE:        2021-03-19
#+DESCRIPTION: Making Custom Menus for the free42/hp-42s/DM42
#+LANGUAGE:    en
#+OPTIONS:     num:t toc:nil \n:nil @:t ::t |:t ^:nil -:t f:t *:t <:t skip:nil d:nil todo:t pri:nil H:5 p:t author:t html-scripts:nil
#+HTML_HEAD: <style>body { width: 95%; margin: 2% auto; font-size: 18px; line-height: 1.4em; font-family: Georgia, serif; color: black; background-color: white; }</style>
#+HTML_HEAD: <style>body { min-width: 500px; max-width: 1024px; }</style>
#+HTML_HEAD: <style>h1,h2,h3,h4,h5,h6 { color: #A5573E; line-height: 1em; font-family: Helvetica, sans-serif; }</style>
#+HTML_HEAD: <style>h1,h2,h3 { line-height: 1.4em; }</style>
#+HTML_HEAD: <style>h1.title { font-size: 3em; }</style>
#+HTML_HEAD: <style>h4,h5,h6 { font-size: 1em; }</style>
#+HTML_HEAD: <style>.org-src-container { border: 1px solid #ccc; box-shadow: 3px 3px 3px #eee; font-family: Lucida Console, monospace; font-size: 80%; margin: 0px; padding: 0px 0px; position: relative; }</style>
#+HTML_HEAD: <style>.org-src-container>pre { line-height: 1.2em; padding-top: 1.5em; margin: 0.5em; background-color: #404040; color: white; overflow: auto; }</style>
#+HTML_HEAD: <style>.org-src-container>pre:before { display: block; position: absolute; background-color: #b3b3b3; top: 0; right: 0; padding: 0 0.2em 0 0.4em; border-bottom-left-radius: 8px; border: 0; color: white; font-size: 100%; font-family: Helvetica, sans-serif;}</style>
#+HTML_HEAD: <style>pre.example { white-space: pre-wrap; white-space: -moz-pre-wrap; white-space: -o-pre-wrap; font-family: Lucida Console, monospace; font-size: 80%; background: #404040; color: white; display: block; padding: 0em; border: 2px solid black; }</style>
#+HTML_LINK_HOME: https://www.mitchr.me/
#+HTML_LINK_UP: https://richmit.github.io/hp42/
#+EXPORT_FILE_NAME: ../docs/custom

#+ATTR_HTML: :border 2 solid #ccc :frame hsides :align center
|        <r> | <l>                                          |
|  *Author:* | /{{{author}}}/                               |
| *Updated:* | /{{{modification-time(%Y-%m-%d %H:%M:%S)}}}/ |
#+ATTR_HTML: :align center
Copyright {{{time(%Y)}}} Mitch Richling. All rights reserved.

#+TOC: headlines 5

#        #         #         #         #         #         #         #         #         #         #         #         #         #         #         #         #         #
#   00   #    10   #    20   #    30   #    40   #    50   #    60   #    70   #    80   #    90   #   100   #   110   #   120   #   130   #   140   #   150   #   160   #
# 234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
#        #         #         #         #         #         #         #         #         #         #         #         #         #         #         #         #         #
#        #         #         #         #         #         #         #         #         #         #         #         #         #         #         #         #         #

* Metadata

The home for this HTML file is: https://richmit.github.io/hp42/custom.html

Files related to this document may be found on github: https://github.com/richmit/hp42

Directory contents:
#+ATTR_HTML: :border 0 :frame none :rules none :align center
   | =src=     | - | The org-mode file that generated this HTML document            |
   | =src_42s= | - | Ready to convert source listings for 42s code in this document |
   | =docs=    | - | This html document                                             |
   | =bin=     | - | Importable RAW program files                                   |

* Introduction
:PROPERTIES:
:CUSTOM_ID: introduction
:END:

The custom menu on the 42s is a wonderful thing, but it is also very limited.  It's just too small!!  And it is only one level deep!!  So instead of simply
assigning functions to the menu keys, how about assigning programs to the keys which present a hierarchical menu of functions?  Coding up such programs is
tedious.  So this org-mode document has a Little bit of Emacs lisp that will consume a table, and generate a 42s program implementing a hierarchical menu.

The flow to create your custom CUST program:
  - Evaluate the "Generic menu generator" babel block in the =hp42s-meta.org= file.  This will define the function =MJR-generate-42-menu-code=
  - Evaluate the "For CUSTOM-type Menus" babel block in the =hp42s-meta.org= file.  This will define the function =MJR-custom-x-gen=
  - Define your menu in the [[Menu Contents][Menu Contents]] section.
  - Evaluate the babel block in the [[Menu Code][Menu Code]] section below.
  - Load the program on your calculator

** Customizing Custom Menu Table

The first column (which I labeled Menu) describes the menu keys.  Colons are used to define a menu hierarchy.  For example "=top:mid:thingy=" means we have a
top level menu "=top=" containing a menu "=mid=" containing a function/program "=thingy=".  Another entry like "=top:thingy2=" would add a function/program
key "=thingy2="to the "=top=" menu -- yes menus can contain a mix of functions/programs and menus.

The only limitation on menu hierarchy depth or size comes from the use of two digit local labels in the generated code.  A label is consume for each
function/program and for each menu page.

The second column is the function/program name/label to call.  If this is empty, then the menu name will be used.  For example "=SFUN:HYP:SINH=" will call the
=SINH= function if no Program is specified.

The other columns of the table are not used.

* Custom Menus

** Menu Contents

#+ATTR_HTML: :rules groups :frame box :align center
#+NAME: cust
| Menu      | Function/Program |                                               |
|-----------+------------------+-----------------------------------------------|
| SFUN:TRIG | TRIG             | https://richmit.github.io/hp42/math.html      |
| SFUN:HYP  | HYPTRG           | https://richmit.github.io/hp42/math.html      |
| SFUN:L&P  | LPRT             | https://richmit.github.io/hp42/math.html      |
| SFUN:PERC | PERCFN           | https://richmit.github.io/hp42/math.html      |
| SFUN:BINO |                  | https://richmit.github.io/hp42/math.html      |
| SFUN:CPLX | CPLXF            | https://richmit.github.io/hp42/math.html      |
| SFUN:INT  | INTFUN           | https://richmit.github.io/hp42/math.html      |
| SFUN:ERR  | ERRFUN           | https://richmit.github.io/hp42/math.html      |
| SFUN:ERR  | ERRFUN           | https://richmit.github.io/hp42/math.html      |
| SFUN:MISC | KSFUN            | https://richmit.github.io/hp42/math.html      |
|-----------+------------------+-----------------------------------------------|
| MATH:POLY |                  | https://richmit.github.io/hp42/math.html      |
| MATH:FUNC | FMENU            | https://richmit.github.io/hp42/pgmforfun.html |
| MATH:VEC3 |                  | https://richmit.github.io/hp42/math.html      |
| MATH:NLA  |                  | https://richmit.github.io/hp42/math.html      |
|-----------+------------------+-----------------------------------------------|
| BASE      |                  | https://richmit.github.io/hp42/base.html      |
| PHIL      |                  | https://richmit.github.io/hp42/phil.html      |
| MEAS      |                  | https://richmit.github.io/hp42/meas.html      |
| DATE      | DMENU            | https://richmit.github.io/hp42/date.html      |
| CONS      |                  | https://richmit.github.io/hp42/cons.html      |
| UNIT      |                  | https://richmit.github.io/hp42/unit.html      |
|-----------+------------------+-----------------------------------------------|

** Menu Code

The menu program is generated via the following bit of elisp.  You must first define the =MJR-generate-42-menu-code= and =MJR-custom-x-gen= by evaluating the code blocks in the =hp42s-meta.org= file.

#+BEGIN_SRC elisp :var tbl=cust :colnames y :results output verbatum :wrap "src hp42s :tangle ../src_42s/custom/custom.hp42s"
(MJR-generate-42-menu-code "CUST" 0 tbl 0 1 'stay 'up #'MJR-custom-gen-lab #'MJR-custom-gen-sub)
#+END_SRC

#+RESULTS:
#+begin_src hp42s :tangle ../src_42s/custom/custom.hp42s
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ (ref:CUST)
@@@@ DSC: Auto-generated menu program
LBL "CUST"
LBL 01            @@@@ Page 1 of menu CUST
CLMENU
"SFUN"
KEY 1 GTO 03
"MATH"
KEY 2 GTO 04
"BASE"
KEY 3 XEQ "BASE"
"PHIL"
KEY 4 XEQ "PHIL"
"MEAS"
KEY 5 XEQ "MEAS"
"DATE"
KEY 6 XEQ "DMENU"
KEY 7 GTO 02
KEY 8 GTO 02
KEY 9 GTO 00
MENU
STOP
GTO 01
LBL 02            @@@@ Page 2 of menu CUST
CLMENU
"CONS"
KEY 1 XEQ "CONS"
"UNIT"
KEY 2 XEQ "UNIT"
KEY 7 GTO 01
KEY 8 GTO 01
KEY 9 GTO 00
MENU
STOP
GTO 02
LBL 03            @@@@ Page 1 of menu SFUN
CLMENU
"TRIG"
KEY 1 XEQ "TRIG"
"HYP"
KEY 2 XEQ "HYPTRG"
"L&P"
KEY 3 XEQ "LPRT"
"PERC"
KEY 4 XEQ "PERCFN"
"BINO"
KEY 5 XEQ "BINO"
"CPLX"
KEY 6 XEQ "CPLXF"
KEY 7 GTO 05
KEY 8 GTO 05
KEY 9 GTO 01
MENU
STOP
GTO 03
LBL 05            @@@@ Page 2 of menu SFUN
CLMENU
"INT"
KEY 1 XEQ "INTFUN"
"ERR"
KEY 2 XEQ "ERRFUN"
"ERR"
KEY 3 XEQ "ERRFUN"
"MISC"
KEY 4 XEQ "KSFUN"
KEY 7 GTO 03
KEY 8 GTO 03
KEY 9 GTO 01
MENU
STOP
GTO 05
LBL 04            @@@@ Page 1 of menu MATH
CLMENU
"POLY"
KEY 1 XEQ "POLY"
"FUNC"
KEY 2 XEQ "FMENU"
"VEC3"
KEY 3 XEQ "VEC3"
"NLA"
KEY 4 XEQ "NLA"
KEY 9 GTO 01
MENU
STOP
GTO 04
LBL 00 @@@@ Application Exit
EXITALL
RTN
@@@@ Free labels start at: 6
#+end_src

* Create system =CUSTOM= Menu
:PROPERTIES:
:CUSTOM_ID: system-custom
:END:

Sometimes our carefully built in =CUSTOM= menu is lost -- an errant program or system memory clear.  What to do?  How about a program that will recreate your
=CUSTOM= menu when you need it?  In the table below we have the definition of our custom menu, and a bit of lisp that will write a 42s program to =ASSIGN=
each key.

#+ATTR_HTML: :rules groups :frame box :align center
#+NAME: custom
| KEY# | ASSIGNment | Only On |
|------+------------+---------|
|    1 | CUST       |         |
|    2 |            |         |
|    3 |            |         |
|    4 |            |         |
|    5 |            |         |
|    6 | ¦¦         |         |
|------+------------+---------|
|    7 | VirtV      | DM42    |
|    8 |            |         |
|    9 |            |         |
|   10 |            |         |
|   11 |            |         |
|   12 |            |         |
|------+------------+---------|
|   13 | SST        |         |
|   14 | SST↑       |         |
|   15 | SST→       |         |
|   16 | GTO        |         |
|   17 | XEQ        |         |
|   18 | VIEW       | DM42    |
|   18 | PRV        | !DM42   |
|------+------------+---------|

Simply evaluate the followign lisp block, and the 42s program will be created.

#+BEGIN_SRC elisp :var tbl=custom :colnames y :results output verbatum :wrap "src hp42s :tangle ../src_42s/custom/custom.hp42s"
;; The generated code uses the existance of GrMod to guess if we are on a DM42
(princ (message "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ (ref:%s)\n" "MKCM"))
(princ "@@@@ DSC: Autogenerated menu program\n")
(princ "LBL \"MKCM\"\n")
(princ "CLKEYS\n")
(cl-loop for (da-key da-assignment da-pform) in tbl
         for da-assignment-fixed = (replace-regexp-in-string "¦" "|" da-assignment 't 't)
         for have-key = (not (zerop (length da-assignment-fixed)))
         when (and have-key (string-equal da-pform "DM42"))
         do (princ "SF 25\nRCL \"GrMod\"\nFS?C 25\n")
         when (and have-key (string-equal da-pform "!DM42"))
         do (princ "SF 25\nRCL \"GrMod\"\nFC?C 25\n")
         when have-key
         do (princ (message "ASSIGN \"%s\" TO %02d\n" da-assignment-fixed da-key))))
(princ "RTN\n")
(princ "END\n")
#+END_SRC

#+RESULTS:
#+begin_src hp42s :tangle ../src_42s/custom/custom.hp42s
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ (ref:MKCM)
@@@@ DSC: Autogenerated menu program
LBL "MKCM"
CLKEYS
ASSIGN "CUST" TO 01
ASSIGN "||" TO 06
SF 25
RCL "GrMod"
FS?C 25
ASSIGN "VirtV" TO 07
ASSIGN "SST" TO 13
ASSIGN "SST↑" TO 14
ASSIGN "SST→" TO 15
ASSIGN "GTO" TO 16
ASSIGN "XEQ" TO 17
SF 25
RCL "GrMod"
FS?C 25
ASSIGN "VIEW" TO 18
SF 25
RCL "GrMod"
FC?C 25
ASSIGN "PRV" TO 18
RTN
END
#+end_src

* =SPREF=: Set some of my personal prefrences

#+BEGIN_SRC hp42s :tangle ../src_42s/custom/custom.hp42s
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ (ref:SPREF)
@@@@ DSC: Set some of my personal prefrences
@@@@ IN:  N/A
@@@@ OUT: N/A
@@@@ TST: free42_3.0.2
@@@@ BUG: This sets some of *my* favorite prefrences.  You might not like them. ;)
@@@@ UPD: 2021-04-05
LBL "SPREF"
FUNC 00
ALL     @@@@ Display all digits
RECT    @@@@ Complex number format
RAD     @@@@ Angle mode
CPXRES  @@@@ Complex results
RDX.    @@@@ Use periods
KEYASN  @@@@ Custom menu
DECM    @@@@ Make sure we are in decimal mode
64      @@@@ WSIZE
FS? 78
BSIGNED @@@@ Unsigned integer mode
FS? 79
BWRAP   @@@@ Don't wrap integers
DMY     @@@@ D.MY mode
CL12    @@@@ AM/PM mode
4STK    @@@@ Four level stack
EXITALL @@@@ Exit menus
RTN
#+END_SRC

* END
#+BEGIN_SRC hp42s :tangle ../src_42s/custom/custom.hp42s
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
END
#+END_SRC



* WORKING                                                          :noexport:

#+BEGIN_SRC text
:::::::::::::::::::::::'##:::::'##::::'###::::'########::'##::: ##:'####:'##::: ##::'######::::::::::::::::::::::::
::::::::::::::::::::::: ##:'##: ##:::'## ##::: ##.... ##: ###:: ##:. ##:: ###:: ##:'##... ##:::::::::::::::::::::::
::::::::::::::::::::::: ##: ##: ##::'##:. ##:: ##:::: ##: ####: ##:: ##:: ####: ##: ##:::..::::::::::::::::::::::::
::::::::::::::::::::::: ##: ##: ##:'##:::. ##: ########:: ## ## ##:: ##:: ## ## ##: ##::'####::::::::::::::::::::::
::::::::::::::::::::::: ##: ##: ##: #########: ##.. ##::: ##. ####:: ##:: ##. ####: ##::: ##:::::::::::::::::::::::
::::::::::::::::::::::: ##: ##: ##: ##.... ##: ##::. ##:: ##:. ###:: ##:: ##:. ###: ##::: ##:::::::::::::::::::::::
:::::::::::::::::::::::. ###. ###:: ##:::: ##: ##:::. ##: ##::. ##:'####: ##::. ##:. ######::::::::::::::::::::::::
::::::::::::::::::::::::...::...:::..:::::..::..:::::..::..::::..::....::..::::..:::......:::::::::::::::::::::::::
#+END_SRC

Code in this section is under construction.  Most likely broken.

* EOF

# End of document.

# The following adds some space at the bottom of exported HTML
#+HTML: <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br />
#+HTML: <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br />
#+HTML: <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br />
#+HTML: <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br />
#+HTML: <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br />
