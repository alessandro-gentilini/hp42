# -*- Mode:Org; Coding:utf-8; fill-column:158 -*-
#+TITLE:       free42: Programs For Functions
#+AUTHOR:      Mitch Richling
#+EMAIL:       http://www.mitchr.me/
#+DATE:        2021-03-19
#+DESCRIPTION: free42/hp-42s/DM42 programs for working with MVAR functions
#+LANGUAGE:    en
#+OPTIONS:     num:t toc:nil \n:nil @:t ::t |:t ^:nil -:t f:t *:t <:t skip:nil d:nil todo:t pri:nil H:5 p:t author:t html-scripts:nil
#+HTML_HEAD: <style>body { width: 95%; margin: 2% auto; font-size: 18px; line-height: 1.4em; font-family: Georgia, serif; color: black; background-color: white; }</style>
#+HTML_HEAD: <style>body { min-width: 500px; max-width: 1024px; }</style>
#+HTML_HEAD: <style>h1,h2,h3,h4,h5,h6 { color: #A5573E; line-height: 1em; font-family: Helvetica, sans-serif; }</style>
#+HTML_HEAD: <style>h1,h2,h3 { line-height: 1.4em; }</style>
#+HTML_HEAD: <style>h1.title { font-size: 3em; }</style>
#+HTML_HEAD: <style>h4,h5,h6 { font-size: 1em; }</style>
#+HTML_HEAD: <style>.org-src-container { border: 1px solid #ccc; box-shadow: 3px 3px 3px #eee; font-family: Lucida Console, monospace; font-size: 80%; margin: 0px; padding: 0px 0px; position: relative; }</style>
#+HTML_HEAD: <style>.org-src-container>pre { line-height: 1.2em; padding-top: 1.5em; margin: 0.5em; background-color: #404040; color: white; overflow: auto; }</style>
#+HTML_HEAD: <style>.org-src-container>pre:before { display: block; position: absolute; background-color: #b3b3b3; top: 0; right: 0; padding: 0 0.2em 0 0.4em; border-bottom-left-radius: 8px; border: 0; color: white; font-size: 100%; font-family: Helvetica, sans-serif;}</style>
#+HTML_HEAD: <style>pre.example { white-space: pre-wrap; white-space: -moz-pre-wrap; white-space: -o-pre-wrap; font-family: Lucida Console, monospace; font-size: 80%; background: #404040; color: white; display: block; padding: 0em; border: 2px solid black; }</style>
#+HTML_LINK_HOME: https://www.mitchr.me/
#+HTML_LINK_UP: https://richmit.github.io/hp42/
#+EXPORT_FILE_NAME: ../docs/pgmforfun

#+ATTR_HTML: :border 2 solid #ccc :frame hsides :align center
|        <r> | <l>              |
|  *Author:* | /{{{author}}}/ |
| *Updated:* | /{{{time(%Y-%m-%d %H:%M:%S)}}}/ |
#+ATTR_HTML: :align center
Copyright {{{time(%Y)}}} Mitch Richling. All rights reserved.

#+TOC: headlines 5

#        #         #         #         #         #         #         #         #         #         #         #         #         #         #         #         #         #
#   00   #    10   #    20   #    30   #    40   #    50   #    60   #    70   #    80   #    90   #   100   #   110   #   120   #   130   #   140   #   150   #   160   #
# 234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
#        #         #         #         #         #         #         #         #         #         #         #         #         #         #         #         #         #
#        #         #         #         #         #         #         #         #         #         #         #         #         #         #         #         #         #

* Metadata

This home for this HTML file is: https://richmit.github.io/hp42/pgmforfun.html

Files related to this document may be found on github: https://github.com/richmit/hp42

   - =src= directory: Contains the org-mode file that generated this HTML document
   - =docs= directory: Contains this html document
   - =bin= directory: Contains raw program files

* Introduction

$$\mathrm{Plots} \;\;\;\;\;\;\; \mathrm{Sums} \;\; \sum_{n=1}^{15}\frac{1}{n^2} \;\;\;\;\;\;\; \mathrm{Products} \;\; \prod_{n=1}^{15}\frac{1}{n^2} \;\;\;\;\;\;\; \mathrm{Integrals} \;\; \int_{1}^{15}\frac{1}{x^2}dx \;\;\;\;\;\;\; \mathrm{Roots} $$

This is an odd collection of programs that work with =MVAR=-type programs (equations).  I was inspired to do this when the =PGMENU= function was added to
free42.  My current plans include the following programs:

#+ATTR_HTML: :align center
|---------+------------------------------------------------------------------+------------|
| Program | Description                                                      | Status     |
|---------+------------------------------------------------------------------+------------|
| =FSPT=  | Interactive application for computing Sums, Products, and Tables | *Beta*     |
| =FPLT=  | Interactive application for plotting a function                  | *In Work*  |
|---------+------------------------------------------------------------------+------------|
| =FSLV=  | Solve EqP for EqV in [LLIM, ULIM]                                | /Planned/  |
| =FINT=  | Integrate EqP for EqV in [LLIM, ULIM]                            | /Planned/  |
| =FSUM=  | Sum EqP for values of EqV from LLIM to ULIM stepping by STEP     | *Complete* |
| =FPRD=  | Product EqP for values of EqV from LLIM to ULIM stepping by STEP | *Complete* |
|---------+------------------------------------------------------------------+------------|
| =PICF=  | Interactive application to select and describe an =MVAR= program | *Complete* |
| =WRPF=  | Wrap a simple function inside an =MVAR= program                  | *Complete* |
|---------+------------------------------------------------------------------+------------|
| =FVARM= | MVAR program with all the global variables for these apps        | *Complete* |
| =FMENU=  | Menu program orginizeing these apps                              | *In Work*  |
|---------+------------------------------------------------------------------+------------|

My thinking for such programs is that they share a framework and common  principals.

All the top level programs use =PICF= to collect information about the =MVAR= program to be used.  The collected information is housed in three global
variables:

#+ATTR_HTML: :align center
|----------+-------------------------------------|
| Variable | Contents                            |
|----------+-------------------------------------|
| =EqP=    | Name of MVAR program                |
| =EqV=    | Name of independent variable        |
| =EqD=    | Number of returns from MVAR program |
|----------+-------------------------------------|

Depending on what we are doing with the =MVAR= program, we may need to know something about the independent variable too.  For example when summing function
values we need to know lower and upper ranges over which to sum, and a step size by which to increment the variable.  We use a consistent set of global
variables based upon names used by built in tools:

#+ATTR_HTML: :align center
|----------+-------------------------------------|
| Variable | Contents                            |
|----------+-------------------------------------|
| =LLIM=   | Lower limit of independent variable |
| =ULIM=   | Upper limit of independent variable |
| =STEP=   | A step size                         |
|----------+-------------------------------------|

If a second variable is used, then similar variables are used; however, we have no precedent for what to name them.  So I have decided to use the following:

#+ATTR_HTML: :align center
|----------+------------------------------------------------|
| Variable | Contents                                       |
|----------+------------------------------------------------|
| =YMIN=   | Lower limit of second or dependent variable    |
| =YMAX=   | Upper limit of second or dependent variable    |
| =YSTP=   | A step size for a second or dependent variable |
|----------+------------------------------------------------|

If an accuracy is required, then we use the variable =ACC=.

* Test Functions
A few =MVAR= functions to test with

#+begin_src hp42s :tangle yes
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ (ref:TFQ)
@@@@ DSC: A quadratic with zeros at 0 and 1
LBL "TFQ"
MVAR "X"
RCL "X"
1
-
RCL "X"
×
RTN 
END

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ (ref:TFC)
@@@@ DSC: A cubic with zeros at -1, 0.9, and 1
LBL "TFC"
MVAR "X"
RCL "X"
1
-
RCL "X"
1
+
×
RCL "X"
.9
-
×
RTN 
END

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ (ref:TFO)
@@@@ DSC: A function that with increasing frequency approaching zero
LBL "TFO"
MVAR "X"
RCL "X"
ABS
0.01
+
SIN
RTN 
END

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ (ref:TFM)
@@@@ DSC: A function that has many step discontinuities
@@@@ FAQ: Good test to make sure we don't connect across known discontinuities
LBL "TFM"
MVAR "X"
RCL "X"
IP
MOD
.5
-
2
×
RTN 
END

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ (ref:TFF)
@@@@ DSC: A function flips between 1 and -1 each call
@@@@ FAQ: Worst case performance for connecting dots
LBL "TFF"
MVAR "X"
1
FS?C 85
RTN
SF 85
-1
RTN
END
#+END_SRC

* Utility Functions

** =WRPF=: Wrap simple functions with =MVAR= program

Sometimes we need to work with a simple function that takes an argument from the stack and returns one or more values to the stack -- i.e. non "MVAR"
variables.  To work with such functions we can wrap them.  A generic solution might be to store the name of your simple function in the variable "IEqV", and
then give "WRPF" to solver, integrator, or =FSPT= program.

#+begin_src hp42s :tangle yes
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ (ref:WRPF)
@@@@ DSC: Wrap a simple function inside an =MVAR= program
LBL "WRPF"
MVAR "X"
RCL "X"
XEQ IND "IEqV"
RTN
END
#+END_SRC

** =PICF=: Interactively Query For =MVAR= Program, Variable, and Number of Returns

#+begin_src hp42s :tangle yes
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ (ref:PICF)
@@@@ DSC: Pick an MVAR function and variable
@@@@ IN:  X: integer
@@@@ FAQ: If X=0, then EqD is set to 1.  Otherwise the user is prompted.
@@@@ UPD: 2021-02-24
@@@@ GBL: EqP  -- Name of selected function
@@@@ GBL: EqV -- Name of selected variable
@@@@ GBL: EqD -- Return count
@@@@ BUG: Variable menu works like solver, not like integrator.  Can't fix that...
@@@@ REQ: REQ:free42>=3.0
LBL "PICF"
FUNC 10
L4STK
CLV "EqP"
CLV "EqV"
CLV "EqD"
X≠0?
GTO 08
1
STO "EqD"
LBL 08
EXITALL
PGMMENU
"Pick Function"
AVIEW
STOP
ASTO "EqP"
EXITALL
VARMENU IND "EqP"
"Set Var; "
├"Pick Free Var"
AVIEW
STOP
ASTO "EqV"
EXITALL
SF 25
RCL "EqD"
FS?C 25
GTO 07
"Select Return"
├" Count"
AVIEW
CLMENU
"1"
KEY 1 XEQ 02
"2"
KEY 2 XEQ 03
"3"
KEY 3 XEQ 04
"4"
KEY 4 XEQ 05
MENU
STOP
EXITALL
STO "EqD"
LBL 07
"F: "
ARCL "EqP"
├"("
ARCL "EqV"
├"):→"
ARCL "EqD"
AVIEW
RTN
LBL 02
1
RTN
LBL 03
2
RTN
LBL 04
3
RTN
LBL 05
4
RTN
END
#+END_SRC

* =FSPT=: Interactive Sums, Products, & Tables

Create function tables and computes sums & products.  Works much like the built in integration application.  

The =LOG= button transforms the function results by taking the natural logarithm -- for example this allows us to compute very large products by summing the logarithms.

The =IND= button stores the independent variable value in the table.  

When not provided, the values for =LLIM=, =STEP=, & =EqD= default to 1.

#+begin_src hp42s :tangle yes
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ (ref:FSPT)
@@@@ DSC: Sums, Products, & Tables
@@@@ IN:  N/A
@@@@ OUT: N/A
@@@@ UPD: 2021-04-03
@@@@ GBL: LLIM -- Lower limit for variable
@@@@ GBL: ULIM -- Upper limit for variable
@@@@ GBL: STEP -- Size of steps to make
@@@@ FLG: 82: Set: log function returns
@@@@ FLG: 83: Set: Store independent variable in table
@@@@ FLG: 84: Set: doing table, Clear: Doing sum or product (see flag 85)
@@@@ FLG: 85: Set: doing sum, Clear; doing product
@@@@ LLB: 00-12,14-24,26-33
@@@@ GLB: FSPT
@@@@ USE: PICF
@@@@ REQ: REQ:free42>=3.0
LBL "FSPT"
CF 82
SF 83
1
XEQ "PICF"
R↓
LBL 01            @@@@ Page 1 of menu PROG_NAME
CLMENU
"LLIM"
KEY 1 XEQ 03
"ULIM"
KEY 2 XEQ 04
"STEP"
KEY 3 XEQ 05
"Σ"
KEY 4 XEQ 06
"π"
KEY 5 XEQ 07
"▒"
KEY 6 XEQ 08
KEY 7 GTO 02
KEY 8 GTO 02
KEY 9 GTO 00
MENU
STOP
GTO 01
LBL 02            @@@@ Page 2 of menu PROG_NAME
CLMENU
"EQ"
KEY 1 XEQ 09
FS? 82
"LN•"
FC? 82
"LN"
KEY 2 XEQ 10
FS? 83
"IND•"
FC? 83
"IND"
KEY 3 XEQ 11
KEY 7 GTO 01
KEY 8 GTO 01
KEY 9 GTO 00
MENU
STOP
GTO 02
LBL 00
EXITALL
RTN
LBL 03               @@@@ Action for menu key LLIM
STO "LLIM"
"LLIM: "
ARCL ST X
AVIEW
RTN
LBL 04               @@@@ Action for menu key ULIM
STO "ULIM"
"ULIM: "
ARCL ST X
AVIEW
RTN
LBL 05               @@@@ Action for menu key STEP
STO "STEP"
"STEP: "
ARCL ST X
AVIEW
RTN
LBL 06               @@@@ Action for menu key Σ
CF 84                @@@@ 84 clear -> not a table
SF 85                @@@@ 85 set   -> sum
GTO 20
RTN
LBL 07               @@@@ Action for menu key π
CF 84                @@@@ 84 clear -> not a table
CF 85                @@@@ 85 clear   -> product
GTO 20
RTN
LBL 08               @@@@ Action for menu key ▒
SF 84                @@@@ 84 set ->  table
GTO 20
RTN
LBL 09               @@@@ Action for menu key EQ
1
XEQ "PICF"
R↓
RTN
LBL 10               @@@@ Action for menu key LN
FS?C 82
RTN
SF 82
RTN
LBL 11               @@@@ Action for menu key IND
FS?C 83
RTN
SF 83
RTN
LBL 20  @@@@ Guts of the sum, product, table code
@@@@ Default LLIM & STEP to 1 if unset
1
SF 25
RCL "LLIM"
FC?C 25
STO "LLIM"
SF 25
RCL "STEP"
FC?C 25
STO "STEP"
@@@@ Check for bad LLIM, ULIM, & STEP.  
RCL "LLIM"
RCL "ULIM"
X>Y?
GTO 12
"ERR: LLIM ≥"
├" ULIM"
AVIEW
RTN
LBL 12
RCL "STEP"
X>0?
GTO 14
"ERR: STEP ≤ 0"
AVIEW
RTN
LBL 14
RCL "EqD"
X>0?
GTO 15
"ERR: EqD ≤ 0"
AVIEW
RTN
LBL 15
4
X≥Y?
GTO 16
"ERR: EqD > 4"
AVIEW
RTN
LBL 16
@@@@ Init before loop
FS? 84          @@@@ 84 set -> table
GTO 21          @@@@ 84 clear -> (85 set -> sum , 85 clear -> product)
GTO 22
LBL 22
@@@@ Sum or Product
FS? 85
0
FC? 85
1
LSTO "SoP"
GTO 23
LBL 21
@@@@ Table
1
ENTER
ENTER
RCL "EqD"
FS? 83
+
NEWMAT
LSTO "TMAT"
R↓    @@@@ Drop matrix off stack to save RAM
INDEX "TMAT"
GROW
LBL 23
@@@@ Step through independent variable values and do sum, product, or table
RCL "LLIM"
STO IND "EqV"
LBL 24
@@@@ Print progress
CLA
ARCL "EqV"
├"="
ARCL IND "EqV"
AVIEW
FC? 84
GTO 32
@@@@  Doing a table: Setup CTR for loop later
RCL "EqD"
LSTO "CTR"
@@@@  Doing a table:  Store independent variable if FS? 83
FC? 83 
GTO 32
RCL IND "EqV"
STOEL
J+
LBL 32
@@@@ Evaluate function
SF 25
XEQ IND "EqP"
FS?C 25
GTO 17
"ERR: Func Eval"
AVIEW
RTN
LBL 17
@@@@ Do thing for sum, product, or table
FS? 84
GTO 26
GTO 27
LBL 27
@@@@ Sum or Product
FC? 82
GTO 29
SF 25
LN
FS?C 25
GTO 29
"ERR: Bad Log"
AVIEW
LBL 29
FS? 85
STO+ "SoP"
FC? 85
STO× "SoP"
GTO 28
LBL 26
@@@@ Table
LBL 30
FC? 82
GTO 31
SF 25
LN
FS?C 25
GTO 31
"ERR: Bad Log"
AVIEW
LBL 31
STOEL
J+
R↓
DSE "CTR"
GTO 30
LBL 28
@@@@ Increment independent variable
RCL "STEP"
RCL IND "EqV"
+
STO IND "EqV"
RCL "ULIM"
X≥Y?
GTO 24
@@@@ All done.  Report Results
FS? 84          @@@@ 84 set -> table
GTO 33          @@@@ 84 clear -> (85 set -> sum , 85 clear -> product)
GTO 19
LBL 19
@@@@ Sum or Product
FS? 85
"SUM: "
FC? 85
"PROD: "
RCL "SoP"
GTO 18
LBL 33
@@@@ Table
CLA
RCL "TMAT"
LBL 18
ARCL ST X
AVIEW
RTN
END
#+end_src

* Programmatic Sums & Products

If you already have =EqP=, =EqV=, =LLIM=, =ULIM=, & =STEP= set, then you can use these programs.  These will be faster than the interactive version because they are optimized into tighter loops and because they don't provide any progress updates.

** =FSUM=: Sums

#+BEGIN_SRC hp42s :tangle yes
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ (ref:FSUM)
@@@@ DSC: Sum a function evaluated at regular intervals over a range
@@@@ OUT: X: The sum
@@@@ FAQ: No error checking is done on LLIM, ULIM, STEP, EqV, or EqP
@@@@ FAQ: Faster than sum in FSPT
@@@@ FAQ: EqD is ignored -- only last function value is summed
@@@@ UPD: 2021-04-06
@@@@ REQ: REQ:free42>=3.0
LBL "FSUM"
FUNC 01
0
LSTO "Sum"
@@@@ Step through independent variable values and do sum
RCL "LLIM"
STO IND "EqV"
LBL 24
@@@@ Evaluate function
SF 25
XEQ IND "EqP"
FC?C 25
RTNERR 2
STO+ "Sum"
@@@@ Increment independent variable
RCL "STEP"
RCL+ IND "EqV"
STO IND "EqV"
RCL "ULIM"
X≥Y?
GTO 24
@@@@ All done, put Sum on stack
RCL "Sum"
RTN
END
#+END_SRC

** =FPRD=: Products

#+BEGIN_SRC hp42s :tangle yes
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ (ref:FPRD)
@@@@ DSC: Product of a function evaluated at regular intervals over a range
@@@@ OUT: X: The product
@@@@ FAQ: No error checking is done on LLIM, ULIM, STEP, EqV, or EqP
@@@@ FAQ: Faster than product in FSPT
@@@@ FAQ: EqD is ignored -- only last function value is summed
@@@@ UPD: 2021-04-06
@@@@ REQ: REQ:free42>=3.0
LBL "FPRD"
FUNC 01
1
LSTO "Prd"
@@@@ Step through independent variable values and do product
RCL "LLIM"
STO IND "EqV"
LBL 24
@@@@ Evaluate function
SF 25
XEQ IND "EqP"
FC?C 25
RTNERR 2
STO× "Prd"
@@@@ Increment independent variable
RCL "STEP"
RCL+ IND "EqV"
STO IND "EqV"
RCL "ULIM"
X≥Y?
GTO 24
@@@@ All done, put Prd on stack
RCL "Prd"
RTN
END
#+END_SRC

* Roots & Integrals

Why?  These are built in!  True, but these make it easy to do an integration or find a root when =EqP=, =EqV=, =LLIM=, =ULIM=, & =STEP= are already set.  For
example if you have just plotted a function, =FSLV= makes it easy to find a root in the plot range.

** =FSLV=: Find a root

#+BEGIN_SRC hp42s :tangle yes
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ (ref:FSLV)
@@@@ DSC: Use SOLVE to find a root for EqV in EqP on [LLIM, ULIM]

@@@@ OUT: T: Code indicating solver exit reason
@@@@         0 Found a root
@@@@         1 Sign Reversal
@@@@         2 Extremum
@@@@         3 Bad Guess or Guesses
@@@@         3 Constant?
@@@@ OUT: Z: EqP evaluated at X
@@@@ OUT: Y: Previous best guess
@@@@ OUT: X: Final best guess -- a root if we are lucky
@@@@ FAQ: No error checking is done on LLIM, ULIM, STEP, EqV, or EqP
@@@@ FAQ: Faster than product in FSPT
@@@@ FAQ: EqD is ignored -- only last function value is summed
@@@@ GBL: EqP, EqV, LLIM, ULIM
@@@@ UPD: 2021-04-06
@@@@ REQ: REQ:free42>=3.0
LBL "FSLV"
FUNC 04
PGMSLV IND "EqP"
RCL "LLIM"
STO IND "EqV"
RCL "ULIM"
SOLVE IND "EqV"
RTN
END
#+END_SRC

** =FINT=: Integrate

#+BEGIN_SRC hp42s :tangle yes
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ (ref:FINT)
@@@@ DSC: Use INTEG to find a root for EqV in EqP on [LLIM, ULIM]
@@@@ OUT: X: The integral
@@@@ FAQ: No error checking is done on ACC, LLIM, ULIM, STEP, EqV, or EqP
@@@@ FAQ: EqD is ignored -- only last function value is summed
@@@@ GBL: EqP, EqV, LLIM, ULIM, ACC
@@@@ UPD: 2021-04-06
@@@@ REQ: REQ:free42>=3.0
LBL "FINT"
FUNC 03
PGMINT IND "EqP"
INTEG IND "EqV"
RTN
END
#+END_SRC

* Plots                                                            :noexport:


#+BEGIN_SRC text
:::::::::::::::::::::::'##:::::'##::::'###::::'########::'##::: ##:'####:'##::: ##::'######::::::::::::::::::::::::
::::::::::::::::::::::: ##:'##: ##:::'## ##::: ##.... ##: ###:: ##:. ##:: ###:: ##:'##... ##:::::::::::::::::::::::
::::::::::::::::::::::: ##: ##: ##::'##:. ##:: ##:::: ##: ####: ##:: ##:: ####: ##: ##:::..::::::::::::::::::::::::
::::::::::::::::::::::: ##: ##: ##:'##:::. ##: ########:: ## ## ##:: ##:: ## ## ##: ##::'####::::::::::::::::::::::
::::::::::::::::::::::: ##: ##: ##: #########: ##.. ##::: ##. ####:: ##:: ##. ####: ##::: ##:::::::::::::::::::::::
::::::::::::::::::::::: ##: ##: ##: ##.... ##: ##::. ##:: ##:. ###:: ##:: ##:. ###: ##::: ##:::::::::::::::::::::::
:::::::::::::::::::::::. ###. ###:: ##:::: ##: ##:::. ##: ##::. ##:'####: ##::. ##:. ######::::::::::::::::::::::::
::::::::::::::::::::::::...::...:::..:::::..::..:::::..::..::::..::....::..::::..:::......:::::::::::::::::::::::::
#+END_SRC

Code in this section is under construction.  Most likely broken.

** User Interface

*** Main Menu

#+ATTR_HTML: :align center
|-------+----------------+--------------------------------------------------|
| Menu  | Variable       | Description                                      |
|-------+----------------+--------------------------------------------------|
| EQ    | EqP EqV EqD    | Setup Equation                                   |
| XRNG  | LLIM ULIM STEP | Set X range (X: max Y: min).  *MAGIC*            |
| YRNG  | YMAX YMIN      | Set Y range (X: max Y: min).  *MAGIC*            |
| GRID  | STEP YSTP      | Set grid width (X: Y-width Y: X-width).  *MAGIC* |
| N/A   | N/A            | Reserved                                         |
| PLOT  | N/A            | Draw plot                                        |
|-------+----------------+--------------------------------------------------|

Magic:
  - =XRNG= set to [0, 0]: Sets range to default [-10, 10].  
  - =XRNG= reversed limits: Automatically detected and swapped
  - =XRNG= set to [M, M]: Zooms range by a factor of M.
  - =YRNG= set to [0, 0]: Sets range to default [-6, 6]
  - =YRNG= reversed limits: Automatically detected and swapped
  - =YRNG= set to [M, M]: Zooms range by a factor of M.
  - =GRID= set to 0:  If one of the grid widths is zero, then no grids are drawn for that axis
  - =GRID= set to a negative number:  No axis or grid marks will be drawn for that axis

*** Graphics Display

#+ATTR_HTML: :align center
|-----------+-----------------------------------------------+---------------------|
| Key       | Action                                        | Note                |
|-----------+-----------------------------------------------+---------------------|
| =[2]=     | Adjust bottom side of zoom box                |                     |
| =[4]=     | Adjust left side of zoom box                  |                     |
| =[8]=     | Adjust top side of zoom box                   |                     |
| =[6]=     | Adjust right side of zoom box                 |                     |
| =[ENTER]= | Zoom to box & Redraw                          |                     |
| =[X<>Y]=  | Auto-scale Y & Redraw.  Ignores zoom box.     |                     |
| =[+]=     | Set zoom box adjustment & trace speed to fast |                     |
| =[-]=     | Set zoom box adjustment & trace speed to slow |                     |
| =[+/-]=   | Activate trace cursor                         | Not Implemented Yet |
| =[1]=     | Move trace point left                         | Not Implemented Yet |
| =[3]=     | Move trace point right                        | Not Implemented Yet |
| =[STO]=   | Push trace point to TP (matrix) & LTP (cplx)  | Not Implemented Yet |
| =[7]=     | Find root between left & right edges of box.  |                     |
| =[*]=     | Zoom out 2x (multiply ranges by 2)            |                     |
| =[/]=     | Zoom in 2x (divide ranges by 2)               |                     |
| =[←]=     | Exit to main menu                             |                     |
|-----------+-----------------------------------------------+---------------------|

** Code

#+begin_src hp42s :tangle yes
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ (REF:FPLT)
@@@@ DSC: Plot a MVAR function
@@@@ GBL: EqP, EqV, LLIM, ULIM, STEP, YMIN, YMAX, YSTP
@@@@ FAQ: STEP & YSTP are used for grids
@@@@ UPD: 2021-04-04

@@@@ FREE: 10-19 -11 -12
@@@@ FREE: 30-39
@@@@ FREE: 60-69
@@@@ FREE: 70-79


LBL "FPLT"
3 
STO "GrMod"
R↓
LBL 01               @@@@ Page 1 of menu FPLT
CLMENU
"EQ"
KEY 1 XEQ 02
"XRNG"
KEY 2 XEQ 03
"YRNG"
KEY 3 XEQ 04
"GRID"
KEY 4 XEQ 05
@@@@@KEY 5 XEQ 06
"PLOT"
KEY 6 XEQ 07
KEY 9 GTO 00
MENU
STOP
GTO 01
LBL 00               @@@@ Application Exit
EXITALL
RTN
LBL 02               @@@@ Action for menu key EQ
0
XEQ "PICF"
RTN
LBL 03               @@@@ Action for menu key XRNG
FUNC 00
X≠Y?
GTO 24
X=0?
GTO 26
@@@@ Code for LLIM=ULIM≠0
RCL "ULIM"
RCL- "LLIM"
2
÷
×
RCL "ULIM"
RCL+ "LLIM"
2
÷
RCL ST X        
RCL ST Z
-               
STO "LLIM"
R↓
+
STO "ULIM"
RTN
LBL 26
@@@@ Code for LLIM=ULIM=0
-10
STO "LLIM"
10
STO "ULIM"
RTN
LBL 24
@@@@@ Code for LLIM≠ULIM
STO "ULIM"
X<>Y
STO "LLIM"
X<>Y
RTN
LBL 04               @@@@ Action for menu key YRNG
FUNC 00
X≠Y?
GTO 22
X=0?
GTO 23
@@@@ Code for YMIN=YMAX≠0
RCL "YMAX"
RCL- "YMIN"
2
÷
×
RCL "YMAX"
RCL+ "YMIN"
2
÷
RCL ST X        
RCL ST Z
-               
STO "YMIN"
R↓
+
STO "YMAX"
RTN
LBL 23
@@@@ Code for YMIN=YMAX=0
-6
STO "YMIN"
6
STO "YMAX"
RTN
LBL 22
@@@@@ Code for YMIN≠YMAX
STO "YMAX"
X<>Y
STO "YMIN"
X<>Y
RTN
LBL 05               @@@@ Action for menu key GRID
STO "YSTP"
X<>Y
STO "STEP"
X<>Y
RTN
LBL 06               @@@@ Action for menu key XXXX
RCL "GrMod"
LBL 07               @@@@ Action for menu key PLOT
@@@@ Set YWID
RCL "YMAX"
RCL- "YMIN"
1
RCL "ResY"
-
÷
STO "YWID"
@@@@ Set YWID
RCL "ULIM"
RCL- "LLIM"
RCL "ResX"
1
-
÷
STO "XWID"
@@@@ Draw stuff
CLLCD
CLMENU               @@@@ Only needed on DM42
EXITALL              @@@@ Only needed on DM42
@@@@ Draw X Axis
RCL "STEP"
X<0?           @@@@ No axis if negative
GTO 11
0
XEQ 56
XEQ 58
1
-
XEQ 58
2
+
XEQ 58
LBL 11
@@@@ Draw X Grid
RCL "STEP"
X≤0?
GTO 08
RCL "ULIM"
RCL÷ "STEP" 
IP
RCL× "STEP"
RCL+ "STEP"
RCL "LLIM"
RCL÷ "STEP" 
IP
RCL× "STEP"
RCL- "STEP"
LBL 09
ENTER
XEQ 46
XEQ 48
R↓
RCL+ "STEP"
X<Y?
GTO 09
LBL 08
@@@@ Draw Y Axis
RCL "YSTP"
X<0?           @@@@ No axis if negative
GTO 12
0
XEQ 46
XEQ 48
1
-
XEQ 48
2
+
XEQ 48
LBL 12
@@@@ Draw Y Grid
RCL "YSTP"
X≤0?
GTO 20
RCL "YMAX"         
RCL÷ "YSTP"        
IP
RCL× "YSTP"        
RCL+ "YSTP"        
RCL "YMIN"         
RCL÷ "YSTP"         
IP
RCL× "YSTP"         
RCL- "YSTP"         
LBL 21
ENTER
XEQ 56
XEQ 58
R↓
RCL+ "YSTP"
X<Y?
GTO 21
LBL 20
@@@@ Set Alpha to our box
"πππ"
@@@@ Plot curve
@@@@ Init YPMAX & YPMIN
SF 82
@@@@ Loop across screen
RCL "ResX"
1000
÷
1
+
LSTO "XI"
LBL 41
RCL "XI"
IP
XEQ 47
STO IND "EqV"
SF 25
XEQ IND "EqP"
FC?C 25
GTO 42
FC? 82    
GTO 43
@@@@ Setup YPMIN & YPMAX 
LSTO "YPMAX"
LSTO "YPMIN"
CF 82
LBL 43
@@@@ Update YPMIN & YPMAX if required.
RCL "YPMAX"
X<>Y
X>Y?
LSTO "YPMAX"
RCL "YPMIN"
X<>Y
X<Y?
LSTO "YPMIN"
@@@@ If y is on screen, then draw it
XEQ 56
XEQ 55
GTO 42
RCL "XI"
@@@@@ DRAW FAT PIXEL
XEQ 51
@@@@ Backend of loop - NEXT TARGET
LBL 42
ISG "XI"
GTO 41
@@@@ Done with graph.  Now start graph UI
LBL 87                    @@@@ Zoom Box
10
LSTO "ZBSPD"
1
LSTO "ZBTOP"
RCL "ResY"
LSTO "ZBBOT"
1
LSTO "ZBLFT"
RCL "ResX"
LSTO "ZBRGT"
LBL 88
RCL "ZBSPD"
LSTO "CTR"
LBL 52
RCL "ZBRGT"
RCL "CTR"
+
XEQ 48
DSE "CTR"
GTO 52
RCL "ZBSPD"
LSTO "CTR"
LBL 53
RCL "ZBBOT"
RCL "CTR"
+
XEQ 58
DSE "CTR"
GTO 53
RCL "ZBSPD"
LSTO "CTR"
LBL 54
RCL "ZBTOP"
RCL "CTR"
-
XEQ 58
DSE "CTR"
GTO 54
RCL "ZBSPD"
LSTO "CTR"
LBL 59
RCL "ZBLFT"
RCL "CTR"
-
XEQ 48
DSE "CTR"
GTO 59
GETKEY1
13   
X=Y?                      @@@@ 13 ENTER
GTO 89   
R↓
17
X=Y?                      @@@@ 24 Backspace
GTO 86
R↓
32
X=Y?                      @@@@ - speed slow
GTO 96
R↓
37
X=Y?                      @@@@ - speed fast
GTO 95
R↓
24
X=Y?                      @@@@ 24 LEFT
GTO 91
R↓
26
X=Y?                      @@@@ 26 RIGHT
GTO 92
R↓
20
X=Y?                      @@@@ 20 TOP
GTO 93
R↓
30
X=Y?                      @@@@ 30 BOTTOM
GTO 94
R↓
14
X=Y?                      @@@@ 14 autoscale
GTO 98
R↓
22
X=Y?                      @@@@ 22 zoom in
GTO 97
R↓
27
X=Y?                      @@@@ 27 zoom out
GTO 99
GTO 48
LBL 97 @@@@ 22 / zoom in 
0.5
ENTER
ENTER
XEQ 03
XEQ 04
GTO 07
LBL 99 @@@@ 27 x zoom out
2.0
ENTER
ENTER
XEQ 03
XEQ 04
GTO 07
LBL 98    @@@@ Autoscale Y 
RCL "YPMAX"
-5
RCL× "YWID"
+
RCL "YPMIN"
5
RCL× "YWID"
+
STO "YMIN"
X<>Y
STO "YMAX"
GTO 07
LBL 95 @@@@ 37 + set speed fast
10 
LSTO "ZBSPD"
GTO 88
LBL 96 @@@@ 32 - set speed slow
1 
LSTO "ZBSPD"
GTO 88
LBL 91                    @@@@ LEFT REDO
RCL "ZBRGT"             
-2
RCL× "ZBSPD"            
+
RCL "ZBSPD"
RCL+ "ZBLFT"
X<Y?
LSTO "ZBLFT"
GTO 88
LBL 92                    @@@@ RIGHT REDO
RCL "ZBLFT"             
2
RCL× "ZBSPD"            
+           
RCL "ZBSPD"
+/-                     
RCL+ "ZBRGT"
X>Y?
LSTO "ZBRGT"
GTO 88
LBL 93                    @@@@ TOP REDO
RCL "ZBBOT"             
-2
RCL× "ZBSPD"            
+                         @@@@ Upper_limit
RCL "ZBSPD"
RCL+ "ZBTOP"          @@@ New_ZBTOP Lower_limit
X<Y?
LSTO "ZBTOP"
GTO 88
LBL 94                    @@@@ BOT REDO
RCL "ZBTOP"             
2
RCL× "ZBSPD"            
+                         @@@@ Lower_limit
RCL "ZBSPD"
+/-                     
RCL+ "ZBBOT"          @@@ New_ZBBOT Lower_limit
X>Y?
LSTO "ZBBOT"
GTO 88
LBL 89
RCL "ZBTOP"
XEQ 57
RCL "ZBBOT"
XEQ 57
STO "YMIN"
R↓
STO "YMAX"
RCL "ZBRGT"
XEQ 47
RCL "ZBLFT"
XEQ 47
STO "LLIM"
X<>Y
STO "ULIM"
GTO 07
LBL 86
RTN
LBL 51                    @@@@ Draw BIG Pix  (assumes Alpha is set)
FUNC 00
1
-
X<>Y
1
-
X<>Y
AGRAPH
RTN
LBL 58                    @@@@ HLINE
FUNC 00
XEQ 55
GTO 27
+/-
1
PIXEL
LBL 27
RTN
LBL 48                    @@@@ VLINE
FUNC 00
XEQ 45
GTO 28
+/-
1
X<>Y
PIXEL
LBL 28
RTN
LBL 45                    @@@@ X Out Of Range
FUNC 00
X≤0?
RTNYES
RCL "ResX"
X<Y?
RTNYES
RTNNO
LBL 55                    @@@@ Y Out Of Range
FUNC 00
X≤0?
RTNYES
RCL "ResY"
X<Y?
RTNYES
RTNNO
LBL 46                    @@@@ XR->XI
FUNC 11
RCL- "LLIM"
RCL÷ "XWID"
1
+
RTN
LBL 47                    @@@@ XI->XR
FUNC 11
1
-
RCL× "XWID"
RCL+ "LLIM"
RTN
LBL 56                    @@@@ YR->YI
FUNC 11
RCL- "YMAX"
RCL÷ "YWID"
1
+
RTN
LBL 57                    @@@@ YI->YR
FUNC 11
1
-
RCL× "YWID"
RCL+ "YMAX"
RTN
END
#+end_src

** Fat lines

#+BEGIN_SRC text
 1
 2
 3                                                                                                                                                            ***
 4                                                                                                                                                    ***     *N*                                            2 7 pix writes       1 7 pix blat for 10      1 7 pix blat for 7
 5                                                                                                                                            ***     *N*     ***                                            for a 10 pix line    pix line with >2 pad     pix line with any pad
 6                                                                                                                                    ***     *N*     ***     ---                                                                  Ex A       Ex B          Ex A        Ex B
 7                                                                                                                            ***     *N*     ***     ---     ---                                            1 . >▒  ▒             1 ▒  ▒     1 . >▒        1 . >▒      1 ▒ >▒
 8                                                                                                                    ***     *N*     ***     ---     ---     ---                                              .  ▒  ▒               ▒  ▒       .  ▒          .  ▒        ▒  ▒
 9                                                                                                            ***     *N*     ***     ---     ---     ---     ---                                              .  ▒  ▒               ▒  ▒       .  ▒          .  ▒        ▒  ▒
10                                                                                                    ***     *N*     ***     ---     ---     ---     ---     ---                                              .  ▒ >▒               ▒ >▒       .  ▒          .  ▒        .  ▒
11                                                                                            ***     *N*     ***     ---     ---     ---     ---     ---     ---                                              .  ▒  ▒               .  ▒       .  ▒          ▒  ▒        .  ▒
12                                                                                    ***     *N*     ***     ---     ---     ---     ---     ---     ---     ---                                              .  ▒  ▒               .  ▒       .  ▒          ▒  ▒        .  ▒
13                                                                            ***     *N*     ***     ---     ---     ---     ---     ---     ---     --- 7   --- 8                                          7 .  ▒  ▒             7 .  ▒     7 ▒  ▒        7 ▒  ▒      7 .  ▒
14                                                                    ***     *N*     ***     ---     ---     ---     ---     ---     --- 6   --- 7  +++     +++                                               .  .  ▒               .  ▒       ▒  ▒
15                                                            ***     *N*     ***     ---     ---     ---     ---     --- 5   --- 6  +++     +++     +++     +++                                               .  .  ▒               .  ▒       ▒  ▒
16                                                    ***     *N*     ***     ---     ---     ---     --- 4   --- 5  +++     +++     +++     +++     +++     +++                                           10  .  .  ▒            10 .  ▒       ▒  ▒
17                                            ***     *N*     ***     ---     ---     --- 3   --- 4  +++     +++     +++     +++     +++     +++     +++     +++
18                                    ***     *N*     ***     ---     --- 2   --- 3  +++     +++     +++     +++     +++     +++     +++     +++     +++     +++
19                            ***     *N*     ***     --- 1   --- 2  +++     +++     +++     +++     +++     +++     +++     +++     +++     +++     +++     +++
20                    ***     *N*     ***     --- 1  +++     +++     +++     +++     +++     +++     +++     +++     +++     +++     +++     +++     +++     +++
21            ***     *N*     ***    +++ 1   +++ 1   +++ 2   +++ 2   +++ 3   +++ 3   +++ 4   +++ 4   +++ 5   +++ 5   +++ 6   +++ 6   +++ 7   +++ 7   +++ 8   +++ 8
22   ▒▒▒*    ▒▒N*    ▒▒▒*    ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒
23   ▒ON*    ▒O▒*    ▒O▒     ▒O▒     ▒O▒     ▒O▒     ▒O▒     ▒O▒     ▒O▒     ▒O▒     ▒O▒     ▒O▒     ▒O▒     ▒O▒     ▒O▒     ▒O▒     ▒O▒     ▒O▒     ▒O▒     ▒O▒
24   ▒▒▒*    ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒
     3       3(*)    3(*)    3       3       4       4       5       5       6       6       7       7       7*2     7*2     7*2     7*2     7*2     7*2     7*2
     -       -       -       -       3(1)    4(1)    4(1)    5(2)    5(3)    6(3)    6(4)    7(4)    7(7)    7(5)    7(6)    7(6)    7       7       7*2     7*2


             -       -       -      3(1)    4(1)    4(1)    5(2)    5(3)    6(3)    6(4  )  7(4)    7(7)    7(5)    7(6)    7(6)    7       7       7*2     7*2
            3(*)    3(*)    3       3       4       4       5       5       6       6       7       7       7*2     7*2     7*2     7*2     7*2     7*2     7*2
 1          ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒
 2          ▒O▒*    ▒O▒     ▒O▒     ▒O▒     ▒O▒     ▒O▒     ▒O▒     ▒O▒     ▒O▒     ▒O▒     ▒O▒     ▒O▒     ▒O▒     ▒O▒     ▒O▒     ▒O▒     ▒O▒     ▒O▒     ▒O▒
 3          ▒▒N*    ▒▒▒*    ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒     ▒▒▒
 4           ***     *N*     ***    +++ 1   +++ 1   +++ 2   +++ 2   +++ 3   +++ 3   +++ 4   +++ 4   +++ 5   +++ 5   +++ 6   +++ 6   +++ 7   +++ 7   +++ 8   +++ 8
 5                   ***     *N*     ***     --- 1  +++     +++     +++     +++     +++     +++     +++     +++     +++     +++     +++     +++     +++     +++
 6                           ***     *N*     ***     --- 1   --- 2  +++     +++     +++     +++     +++     +++     +++     +++     +++     +++     +++     +++                                                              API:  START_COL START_ROW END_ROW START_PAD
 7                                   ***     *N*     ***     ---     --- 2   --- 3  +++     +++     +++     +++     +++     +++     +++     +++     +++     +++                                                                    Direction: up 1  down -1
 8                                           ***     *N*     ***     ---     ---     --- 3   --- 4  +++     +++     +++     +++     +++     +++     +++     +++                                                                    delta for up 23->4  =>  23-2=21->4+2=6  => (21- 6+1)=16 bot=16/2=8+3 top=16-8=8+3
 9                                                   ***     *N*     ***     ---     ---     ---     --- 4   --- 5  +++     +++     +++     +++     +++     +++                                                                                 23->5  =>  23-2=21->5+2=7  => (21- 7+1)=15 bot=15/2=7+3 top=15-7=8+3
10                                                           ***     *N*     ***     ---     ---     ---     ---     --- 5   --- 6  +++     +++     +++     +++                                                                                 23->6  =>  23-2=21->6+2=8  => (21- 8+1)=14 bot=14/2=7+3 top=14-7=7+3
11                                                                   ***     *N*     ***     ---     ---     ---     ---     ---     --- 6   --- 7  +++     +++                                                                                 23->7  =>  23-2=21->7+2=9  => (21- 9+1)=13 bot=13/2=6+3 top=13-6=7+3
12                                                                           ***     *N*     ***     ---     ---     ---     ---     ---     ---     --- 7   --- 8                                                                              23->8  =>  23-2=21->8+2=10 => (21-10+1)=12 bot=12/2=6+3 top=12-6=6+3
13                                                                                   ***     *N*     ***     ---     ---     ---     ---     ---     ---     ---                                                                          top segment:  Start at (start_row-1, start_col) & blit down
14                                                                                           ***     *N*     ***     ---     ---     ---     ---     ---     ---
15                                                                                                   ***     *N*     ***     ---     ---     ---     ---     ---
16                                                                                                           ***     *N*     ***     ---     ---     ---     ---
17                                                                                                                   ***     *N*     ***     ---     ---     ---
18                                                                                                                           ***     *N*     ***     ---     ---
19                                                                                                                                   ***     *N*     ***     ---
20                                                                                                                                           ***     *N*     ***
21                                                                                                                                                   ***     *N*
22                                                                                                                                                           ***
23
24

#+END_SRC

* Menus

** =FVARM=: Global Variables Menu

#+begin_src hp42s :tangle yes
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ (ref:FVARM)
@@@@ DSC: MVAR Program with all the global vartiables used by the F* programs
@@@@ GBL: EqP, EqV, EqD, ACC, IEqV, LLIM, ULIM, STEP, YMIN, YMAX, & YSTP
@@@@ UPD: 2021-04-06
LBL "FVARM"
MVAR "LLIM"
MVAR "ULIM"
MVAR "STEP"
MVAR "YMIN"
MVAR "YMAX"
MVAR "YSTP"
MVAR "EqP"
MVAR "EqV"
MVAR "EqD"
MVAR "ACC"
MVAR "IEqV"
RTN
END
#+END_SRC

** =FMENU=: Main menu for all apps

#+begin_src hp42s :tangle yes
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ (ref:FMENU)
@@@@ DSC: Auto-generated menu program
LBL "FMENU"
LBL 01            @@@@ Page 1 of menu FMENU
CLMENU
"FSPT"
KEY 1 XEQ 03
"FPLT"
KEY 2 XEQ 04
@@@@ "RSV0"
@@@@ KEY 3 XEQ 05
@@@@ "RSV1"
@@@@ KEY 4 XEQ 06
"PICF"
KEY 5 XEQ 07
"VARS"
KEY 6 XEQ 08
KEY 7 GTO 02
KEY 8 GTO 02
KEY 9 GTO 00
MENU
STOP
GTO 01
LBL 02            @@@@ Page 2 of menu FMENU
CLMENU
"FSLV"
KEY 1 XEQ 09
"FINT"
KEY 2 XEQ 10
"FSUM"
KEY 3 XEQ 11
"FPRD"
KEY 4 XEQ 12
"PICF"
KEY 5 XEQ 13
"VARS"
KEY 6 XEQ 14
KEY 7 GTO 01
KEY 8 GTO 01
KEY 9 GTO 00
MENU
STOP
GTO 02
LBL 00 @@@@ Application Exit
EXITALL
RTN
LBL 03               @@@@ Action for menu key FSPT
XEQ "FSPT"
RTN
LBL 04               @@@@ Action for menu key FPLT
XEQ "FPLT"
RTN
LBL 05               @@@@ Action for menu key RSV0
XEQ "RSV0"
RTN
LBL 06               @@@@ Action for menu key RSV1
XEQ "RSV1"
RTN
LBL 07               @@@@ Action for menu key PICF
1
XEQ "PICF"
RTN
LBL 08               @@@@ Action for menu key VARS
VARMENU "FVARM"
STOP
RTN
LBL 09               @@@@ Action for menu key FSLV
XEQ "FSLV"
RTN
LBL 10               @@@@ Action for menu key FINT
XEQ "FINT"
RTN
LBL 11               @@@@ Action for menu key FSUM
XEQ "FSUM"
RTN
LBL 12               @@@@ Action for menu key FPRD
XEQ "FPRD"
RTN
LBL 13               @@@@ Action for menu key PICF
1
XEQ "PICF"
RTN
LBL 14               @@@@ Action for menu key VARS
VARMENU "FVARM"
STOP
RTN
END
#+end_src

* WORKING                                                          :noexport:

#+BEGIN_SRC text
:::::::::::::::::::::::'##:::::'##::::'###::::'########::'##::: ##:'####:'##::: ##::'######::::::::::::::::::::::::
::::::::::::::::::::::: ##:'##: ##:::'## ##::: ##.... ##: ###:: ##:. ##:: ###:: ##:'##... ##:::::::::::::::::::::::
::::::::::::::::::::::: ##: ##: ##::'##:. ##:: ##:::: ##: ####: ##:: ##:: ####: ##: ##:::..::::::::::::::::::::::::
::::::::::::::::::::::: ##: ##: ##:'##:::. ##: ########:: ## ## ##:: ##:: ## ## ##: ##::'####::::::::::::::::::::::
::::::::::::::::::::::: ##: ##: ##: #########: ##.. ##::: ##. ####:: ##:: ##. ####: ##::: ##:::::::::::::::::::::::
::::::::::::::::::::::: ##: ##: ##: ##.... ##: ##::. ##:: ##:. ###:: ##:: ##:. ###: ##::: ##:::::::::::::::::::::::
:::::::::::::::::::::::. ###. ###:: ##:::: ##: ##:::. ##: ##::. ##:'####: ##::. ##:. ######::::::::::::::::::::::::
::::::::::::::::::::::::...::...:::..:::::..::..:::::..::..::::..::....::..::::..:::......:::::::::::::::::::::::::
#+END_SRC

Code in this section is under construction.  Most likely broken.

* EOF

# End of document.

# The following adds some space at the bottom of exported HTML
#+HTML: <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br />
#+HTML: <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br />
#+HTML: <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br />
#+HTML: <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br />
#+HTML: <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br />
